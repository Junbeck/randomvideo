# 제품 요구 사항 문서(PRD): 랜덤 유튜브 뮤직비디오 웹사이트

---

## 1. 유저 플로우(User Flow)

1. **웹사이트 접속**
   - 사용자가 웹사이트에 접속하면 랜덤한 유튜브 뮤직비디오가 자동으로 재생됩니다.

2. **비디오 컨트롤**
   - **재생/일시정지**: 영상 위에 마우스를 올리면 재생 및 일시정지 버튼이 나타납니다.
   - **음량 조절**: 볼륨 아이콘을 클릭하여 음량을 조절할 수 있습니다.
   - **전체 화면**: 전체 화면 아이콘을 클릭하여 영상을 전체 화면으로 볼 수 있습니다.

3. **새로운 비디오 요청**
   - **"다음 비디오" 버튼**을 클릭하면 또 다른 랜덤 뮤직비디오가 재생됩니다.

4. **비디오 정보 확인**
   - 영상 하단에 현재 재생 중인 곡의 **제목**과 **아티스트 이름**이 표시됩니다.
   - **"유튜브에서 보기" 링크**를 통해 해당 비디오의 유튜브 페이지로 이동할 수 있습니다.

5. **소셜 공유 (후속 개발)**
   - 좋아하는 비디오를 **소셜 미디어**에 공유할 수 있는 기능이 추가될 예정입니다.

---

## 2. 핵심 기능(Core Features)

- **랜덤 뮤직비디오 재생**
  - 유튜브 Data API를 활용하여 음악 카테고리에서 무작위로 비디오를 가져옵니다.
  - API의 `videoCategoryId=10` (Music)을 사용하여 뮤직비디오만 필터링합니다.

- **자동 재생 기능**
  - 사용자가 추가 액션을 취하지 않아도 웹사이트 접속 시 자동으로 비디오가 재생됩니다.

- **사용자 친화적 인터페이스**
  - 직관적인 디자인으로 누구나 쉽게 사용할 수 있습니다.
  - 반응형 웹 디자인을 적용하여 다양한 디바이스에서 최적의 경험을 제공합니다.

- **동영상 컨트롤**
  - 재생/일시정지, 음량 조절, 전체 화면 등 기본적인 동영상 제어 기능을 제공합니다.

- **비디오 정보 표시**
  - 현재 재생 중인 비디오의 제목과 아티스트 정보를 실시간으로 표시합니다.

- **API 할당량 관리**
  - 효율적인 API 호출 및 캐싱을 통해 유튜브 API의 할당량을 관리합니다.

---

## 3. 후속 개발 및 개선 사항(Follow-up Development)

- **사용자 맞춤 추천**
  - 쿠키나 로컬 스토리지를 이용하여 사용자의 시청 이력을 저장하고, 선호도에 맞는 비디오를 추천합니다.

- **플레이리스트 기능**
  - 사용자가 좋아하는 비디오를 저장하고 자신의 플레이리스트를 생성할 수 있습니다.

- **검색 및 필터 기능**
  - 특정 아티스트, 장르, 분위기 등으로 비디오를 필터링하거나 검색할 수 있습니다.

- **소셜 미디어 공유**
  - 페이스북, 트위터 등 소셜 미디어 플랫폼에 현재 재생 중인 비디오를 공유하는 기능을 추가합니다.

- **다국어 지원**
  - 다양한 언어 옵션을 제공하여 글로벌 사용자들의 접근성을 높입니다.

- **모바일 앱 개발**
  - 웹앱을 기반으로 iOS 및 안드로이드 앱을 개발하여 접근성을 향상시킵니다.

---

## 4. 디렉토리 구조(Directory Tree)

```
project-root/
├── index.html              # 메인 페이지
├── styles/
│   └── styles.css          # CSS 스타일 시트
├── scripts/
│   ├── app.js              # 주요 자바스크립트 파일
│   └── youtubeService.js   # 유튜브 API 호출 및 데이터 처리
├── assets/
│   ├── images/             # 이미지 리소스
│   └── icons/              # 아이콘 파일들
├── libs/
│   └── external/           # 외부 라이브러리 (예: jQuery, Bootstrap)
├── cache/
│   └── videoCache.json     # 캐싱된 비디오 데이터 (API 호출 최소화)
├── docs/
│   └── README.md           # 프로젝트 설명 및 문서화
├── .env                    # 환경 변수 설정 파일 (API 키 등)
├── .gitignore              # Git 제외 파일 목록
└── package.json            # 프로젝트 의존성 및 스크립트
```

- **index.html**: 웹사이트의 메인 진입점입니다.
- **styles/styles.css**: 전체 사이트의 스타일링을 담당합니다.
- **scripts/app.js**: DOM 조작 및 이벤트 처리를 담당합니다.
- **scripts/youtubeService.js**: 유튜브 API와의 통신 및 데이터 처리를 담당합니다.
- **assets/**: 이미지, 아이콘 등 정적 리소스를 보관합니다.
- **libs/external/**: 프로젝트에서 사용하는 외부 라이브러리를 저장합니다.
- **cache/videoCache.json**: API 호출을 최소화하기 위해 비디오 데이터를 캐싱합니다.
- **docs/README.md**: 프로젝트의 개요, 설치 방법, 사용법 등을 문서화합니다.
- **.env**: API 키와 같은 민감한 정보를 환경 변수로 관리합니다.
- **package.json**: Node.js 패키지 매니저를 사용하여 의존성 관리를 합니다.

---

